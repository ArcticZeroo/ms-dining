// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dining.db"
}

model Cafe {
  // string id from buy-ondemand
  id               String  @id
  name             String
  tenantId         String
  logoName         String?
  contextId        String
  displayProfileId String

  dailyStations DailyStation[]
}

model MenuItem {
  // string id from buy-ondemand
  id                     String    @id
  name                   String
  calories               Int
  maxCalories            Int
  description            String?
  imageUrl               String?
  price                  Float
  externalLastUpdateTime DateTime?

  dailyMenuItems DailyMenuItem[]
  modifiers      MenuItemModifier[]

  tags String?
}

model MenuItemTag {
  // string id from buy-ondemand
  id   String @id
  name String
}

model MenuItemModifier {
  // string id from buy-ondemand
  id          String @id
  description String
  minimum     Int
  maximum     Int
  choiceType  String

  menuItems MenuItem[]
  choices   MenuItemModifierChoice[]
}

model MenuItemModifierChoice {
  // string id from buy-ondemand
  id          String @id
  description String
  price       Float

  modifierId String
  modifier   MenuItemModifier @relation(fields: [modifierId], references: [id], onDelete: Cascade)
}

model Station {
  // string id from buy-ondemand
  id      String  @id
  name    String
  logoUrl String?
  menuId  String

  dailyStations DailyStation[]
}

model DailyStation {
  id Int @id @default(autoincrement())

  dateString             String
  externalLastUpdateTime DateTime?

  stationId String
  station   Station @relation(fields: [stationId], references: [id])

  cafeId String
  cafe   Cafe   @relation(fields: [cafeId], references: [id])

  categories DailyCategory[]
}

model DailyCategory {
  id Int @id @default(autoincrement())

  name String

  stationId Int
  station   DailyStation @relation(fields: [stationId], references: [id], onDelete: Cascade)

  menuItems DailyMenuItem[]
}

model DailyMenuItem {
  id Int @id @default(autoincrement())

  menuItemId String
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])

  categoryId Int
  category   DailyCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
}
